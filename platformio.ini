; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = main
src_dir = src
; default_envs = test_odom
; src_dir = test/test_odom
; default_envs = test_ros
; src_dir = test/test_ros

[env]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
build_flags =
	-D VERBOSE_LEVEL=3
; 0: no print
; 1: error print
; 2: warning print
; 3: information print
; 4: debug print

[env:main]
platform = ${env.platform}
board = ${env.board}
framework = ${env.framework}
monitor_speed = ${env.monitor_speed}
build_flags = ${env.build_flags}

board_build.partitions = no_ota.csv
board_microros_transport = serial
lib_deps = 
	madhephaestus/ESP32Servo@^0.13.0
	Adafruit_VL53L1X
	https://github.com/micro-ROS/micro_ros_platformio
	https://github.com/DaiGuard/RobotLocalization@^0.0.1
	pablomarquez76/PS4_Controller_Host@^1.0.6

[env:test_odom]
platform = ${env.platform}
board = ${env.board}
framework = ${env.framework}
monitor_speed = ${env.monitor_speed}
build_flags = ${env.build_flags}

lib_deps = 
	madhephaestus/ESP32Servo@^0.13.0
	https://github.com/DaiGuard/RobotLocalization@^0.0.1

[env:test_ros]
platform = ${env.platform}
board = ${env.board}
framework = ${env.framework}
monitor_speed = ${env.monitor_speed}
build_flags = ${env.build_flags}

board_microros_transport = serial
board_microros_distro = foxy
lib_deps = 	
	https://github.com/micro-ROS/micro_ros_platformio
